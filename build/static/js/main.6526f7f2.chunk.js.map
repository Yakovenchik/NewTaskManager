{"version":3,"sources":["Store/index.js","Store/NewTask.js","Component/Task/index.js","Component/TaskList/index.js","Component/CreatingTask/index.js","Container/MainPage.js","index.js"],"names":["taskStore","elem","form","FormData","append","username","email","text","image","createInit","crossDomain","method","mimeType","contentType","processData","data","dataType","console","log","getAll","fetch","then","response","json","catch","error","res","taskList","JSON","parse","message","tasks","this","openAdding","document","getElementById","style","display","adding","i","splice","observable","action","Task","observer","_this","react_default","a","createElement","className","reactstrap_es","newTask","task","imagePreview","alt","src","props","type","onClick","openPreview","removeTask","taskId","Component","TaskList","e","index","preventDefault","currentPage","pagesCount","Math","ceil","length","aria-label","disabled","handleClick","previous","href","Object","toConsumableArray","Array","map","page","active","key","next","slice","item","Component_Task","id","reverse","CreatingTask","addTask","reader","FileReader","file","target","files","onloadend","result","readAsDataURL","check","placeholder","onChange","value","required","name","getImage","sendTask","MainPage","src_Component_CreatingTask","src_Component_TaskList","root","ReactDOM","render","BrowserRouter","Switch","Route","path","exact","component"],"mappings":"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","file":"static/js/main.6526f7f2.chunk.js","sourcesContent":["import TaskStore from \"./NewTask\";\r\n\r\nexport const taskStore = new TaskStore();\r\n","import { observable, action} from 'mobx';\r\nimport {taskStore} from \"./index\";\r\nimport axios from 'axios';\r\n\r\nexport default class TaskStore{\r\n    @observable taskList=[];\r\n    @observable newTask = {};\r\n    @observable adding = false;\r\n    @observable currentPage = 0;\r\n\r\n    @action addTask(elem){\r\n            let form = new FormData();\r\n            form.append(\"username\", elem.username);\r\n            form.append(\"email\", elem.email);\r\n            form.append(\"text\", elem.text);\r\n            form.append(\"image\", elem.image);\r\n        const createInit = {\r\n            crossDomain: true,\r\n            method: 'POST',\r\n            mimeType: \"multipart/form-data\",\r\n            contentType: false,\r\n            processData: false,\r\n            data: form,\r\n            dataType: \"json\"\r\n        };\r\n        console.log(createInit.data.getAll(\"image\"));\r\n        console.log(form.getAll(\"text\"));\r\n        let address = 'https://uxcandy.com/~shapoval/test-task-backend/create?developer=Aleksandr';\r\n        fetch(address, createInit)\r\n            .then(response=>\r\n                response.json()\r\n            )\r\n            .then(response=>{\r\n                console.log(response);\r\n                }\r\n            )\r\n            .catch(error=>{\r\n                console.log(error)\r\n            });\r\n        fetch('https://uxcandy.com/~shapoval/test-task-backend/?developer=Aleksandr')\r\n            .then(response=>\r\n                response.json()\r\n            )\r\n            .then(res =>\r\n                taskStore.taskList = JSON.parse(res.message.tasks))\r\n            .catch(error=>{\r\n                console.log(error);\r\n            });\r\n        this.openAdding();\r\n    }\r\n\r\n    @action openPreview() {\r\n        if (document.getElementById(\"Preview\").style.display === 'none') {\r\n            document.getElementById(\"Preview\").style.display = 'block';\r\n        } else {\r\n            document.getElementById(\"Preview\").style.display = 'none';\r\n        }\r\n    }\r\n\r\n    @action openAdding() {\r\n        taskStore.adding = !taskStore.adding;\r\n        if (document.getElementById(\"add_task\").style.display === 'none') {\r\n            document.getElementById(\"add_task\").style.display = 'block';\r\n        } else {\r\n            document.getElementById(\"add_task\").style.display = 'none';\r\n        }\r\n    }\r\n\r\n    @action removeTask(i){\r\n        this.taskList.splice(i, 1);\r\n    }\r\n\r\n}","import {observer} from \"mobx-react\";\r\nimport {Component} from \"react\";\r\nimport {taskStore} from \"../../Store\";\r\nimport {Button, Label, Media} from \"reactstrap\";\r\nimport React from \"react\";\r\n\r\n@observer\r\nclass Task extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"content\">\r\n                <div>\r\n                    <Label>Name: </Label>\r\n                    <p>{taskStore.newTask.username}</p>\r\n                </div>\r\n                <div>\r\n                    <Label>Email: </Label>\r\n                    <p>{taskStore.newTask.email}</p>\r\n                </div>\r\n                <div>\r\n                    <Label>Task: </Label>\r\n                    <p>{taskStore.newTask.task}</p>\r\n                </div>\r\n                {taskStore.newTask.imagePreview ? <Media alt={taskStore.newTask.image} src={taskStore.newTask.imagePreview}/> : null}\r\n                <br/>\r\n                {this.props.type === \"preview\" ?\r\n                    <Button onClick={() => taskStore.openPreview()}>Close Preview</Button> :\r\n                    <Button onClick={() => taskStore.removeTask(this.props.taskId)}>Remove Task</Button>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Task;","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { taskStore } from '../../Store/index';\r\nimport './index.css'\r\nimport Task from \"../Task\";\r\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\n\r\n@observer\r\nclass TaskList extends Component {\r\n    handleClick(e, index) {\r\n        e.preventDefault();\r\n        taskStore.currentPage = index;\r\n    }\r\n    render(){\r\n        let pageSize = 3;\r\n        let pagesCount = Math.ceil(taskStore.taskList.length / pageSize);\r\n        return(\r\n            <div>\r\n                <Pagination aria-label=\"Page navigation example\">\r\n                    <PaginationItem disabled={taskStore.currentPage <= 0}>\r\n                        <PaginationLink\r\n                            onClick={e => this.handleClick(e, taskStore.currentPage - 1)}\r\n                            previous\r\n                            href=\"#\"\r\n                        />\r\n                    </PaginationItem>\r\n\r\n                    {[...Array(pagesCount)].map((page, i) =>\r\n                        <PaginationItem active={i === taskStore.currentPage} key={i}>\r\n                            <PaginationLink onClick={e => this.handleClick(e, i)} href=\"#\">\r\n                                {i + 1}\r\n                            </PaginationLink>\r\n                        </PaginationItem>\r\n                    )}\r\n\r\n                    <PaginationItem disabled={taskStore.currentPage >= pagesCount - 1}>\r\n                        <PaginationLink\r\n                            onClick={e => this.handleClick(e, taskStore.currentPage + 1)}\r\n                            next\r\n                            href=\"#\"\r\n                        />\r\n                    </PaginationItem>\r\n                </Pagination>\r\n                {taskStore.taskList\r\n                    .slice(\r\n                        taskStore.currentPage * pageSize,\r\n                        (taskStore.currentPage + 1) * pageSize\r\n                    )\r\n                    .map((item,i)=>{\r\n                        return(\r\n                            <div key={i}>\r\n                                <div className='task'>\r\n                                    <Task taskId={item.id} type=\"list\"/>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }).reverse()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskList;","import React, { Component } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport {taskStore} from '../../Store/index';\r\nimport Task from '../Task';\r\nimport './index.css';\r\nimport { Input, Button, Label, Form, FormGroup } from 'reactstrap';\r\n\r\n\r\n@observer\r\nclass CreatingTask extends Component {\r\n\r\n    sendTask(newTask){\r\n        taskStore.addTask(newTask);\r\n    }\r\n\r\n    getImage(e){\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];\r\n\r\n        reader.onloadend = () => {\r\n            taskStore.newTask.image = file;\r\n            taskStore.newTask.imagePreview = reader.result;\r\n        };\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='headerTask'>\r\n                <h1>Tasks</h1>\r\n                <Button onClick={()=>taskStore.openAdding()}>\r\n                    {!taskStore.adding ? 'Add New Task' : 'Close Adding'}\r\n                </Button>\r\n                <Form className='add_task'  id = \"add_task\" style={{display: 'none'}} >\r\n                    <FormGroup check>\r\n                    <Label> Name: </Label>\r\n                        <Input placeholder='Name...' onChange={(e)=>taskStore.newTask.username=e.target.value}  required/>\r\n                    </FormGroup>\r\n                   <FormGroup check>\r\n                        <Label> Email: </Label>\r\n                        <Input type=\"email\" name=\"email\" placeholder='Email...' onChange={(e)=>taskStore.newTask.email=e.target.value}  required/>\r\n                    </FormGroup>\r\n                    <FormGroup check>\r\n                        <Label> Task: </Label>\r\n                        <Input type=\"text\" placeholder='Description...' onChange={(e)=>taskStore.newTask.text=e.target.value}  required/>\r\n                    </FormGroup>\r\n                   <FormGroup check>\r\n                        <Label> Image: </Label>\r\n                        <Input type=\"file\" onChange={(e)=>this.getImage(e)}/>\r\n                    </FormGroup>\r\n                    <FormGroup className='button_group'>\r\n                        <Button onClick={()=>taskStore.openPreview()}>\r\n                            Preview\r\n                        </Button>\r\n                        <Button onClick={()=>{\r\n                            this.sendTask(taskStore.newTask);\r\n                        }}>\r\n                            New Task\r\n                        </Button>\r\n                        <Button onClick={()=>taskStore.openAdding()}>\r\n                           Close Adding\r\n                        </Button>\r\n                    </FormGroup>\r\n                </Form>\r\n                <div className='preview' id=\"Preview\" style={{display: 'none'}}>\r\n                    <Task type=\"preview\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CreatingTask;","import React, {Component} from 'react';\r\nimport TaskList from '../Component/TaskList';\r\nimport CreatingTask from '../Component/CreatingTask';\r\nimport {taskStore} from \"../Store\";\r\n\r\nexport default class MainPage extends Component{\r\n    componentDidMount(){\r\n        fetch('https://uxcandy.com/~shapoval/test-task-backend/?developer=Aleksandr')\r\n            .then(response=>\r\n                response.json()\r\n            )\r\n            .then(res=>{\r\n                taskStore.taskList = JSON.parse(res.message.tasks)\r\n            })\r\n            .catch(error=>{\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <CreatingTask />\r\n                <TaskList />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport './index.css';\r\nimport MainPage from './Container/MainPage';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst root = document.getElementById('root');\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route path=\"/\" exact component={ MainPage } />\r\n        </Switch>\r\n    </BrowserRouter>\r\n    , root);\r\n\r\n"],"sourceRoot":""}